@prefix : <urn:example:> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix schema: <https://schema.org/> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .

# Number of claims
{
   ( ?X { ?X a schema:Claim . } ?L ) log:collectAllIn _:x .
   ?L list:length ?N .
}
=>
{
   :result :numberOfClaims ?N .
} .

# Which predicates where found
{
    ?X a schema:Claim .
    ?X schema:about ?Y .
    ?S ?P ?O ?Y .
}
=>
{
   :claim :predicate ?P .
} .

# Statistics about the predicates
{
   :claim :predicate ?P .
   ( ?X {
	?X a schema:Claim .
	?X schema:about ?Y .
	?S ?P ?O ?Y
   } ?L ) log:collectAllIn _:x .
   ?L list:unique ?U .
   ?U list:length ?N .

   :result :numberOfClaims ?Total .
   ( ?N ?Total ) math:quotient ?Fraction .
}
=>
{
   :result :predicateNum (?P ?N ?Fraction) .
} .

# Which types of claims were created
{
   ?X a schema:Claim .
   ?X schema:about ?Y .
   ?S a ?Type ?Y .
}
=>
{
   :claim :type ?Type .
} .

# Statistics about the predicates
{
   :claim :type ?O .
   ( ?S {
	?X a schema:Claim .
	?X schema:about ?Y .
	?S ?P ?O ?Y .
   } ?L ) log:collectAllIn _:x .
   ?L list:length ?N .

   :result :numberOfClaims ?Total .
   ( ?N ?Total ) math:quotient ?Fraction .
}
=>
{
   :result :typeNum (?O ?N ?Fraction) .
} .